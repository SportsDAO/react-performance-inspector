{"version":3,"sources":["components/Button.js","Test1.js","Test2.js","index.js"],"names":["props","onClick","style","background","Math","random","toString","children","functions","Set","useState","delta","setDelta","c","setC","incrementDelta","increment","add","className","Button","size","functions2","delta2","setDelta2","c2","setC2","incrementDelta2","useCallback","increment2","render","Test1","Test2","document","getElementById"],"mappings":"gKAIe,WAACA,GACd,OACE,4BAAQC,QAASD,EAAMC,QAASC,MAAO,CAACC,WAJjB,KAAmB,SAAdC,KAAKC,UAAmB,GAAGC,SAAS,MAIMN,EAAMO,WCD1EC,G,KAAY,IAAIC,KAEP,aAAO,IAAD,EACOC,mBAAS,GADhB,mBACZC,EADY,KACLC,EADK,OAEDF,mBAAS,GAFR,mBAEZG,EAFY,KAETC,EAFS,KAGbC,EAAiB,kBAAMH,GAAS,SAAAD,GAAK,OAAIA,EAAQ,MACjDK,EAAY,kBAAMF,GAAK,SAAAD,GAAC,OAAIA,EAAIF,MAKtC,OAHAH,EAAUS,IAAIF,GACdP,EAAUS,IAAID,GAGZ,6BACE,yBAAKE,UAAU,aACb,0EACA,gGACA,yEACA,4HACA,uCAAaP,GACb,mCAASE,GAET,kBAACM,EAAD,CAAQlB,QAASc,GAAjB,mBACA,kBAACI,EAAD,CAAQlB,QAASe,GAAjB,qBAEA,wDAA8BR,EAAUY,SCxB1CC,EAAa,IAAIZ,IAER,aAAO,IAAD,EACSC,mBAAS,GADlB,mBACZY,EADY,KACJC,EADI,OAECb,mBAAS,GAFV,mBAEZc,EAFY,KAERC,EAFQ,KAGbC,EAAkBC,uBAAY,kBAAMJ,GAAU,SAAAD,GAAM,OAAIA,EAAS,OAAI,IACrEM,EAAaD,uBAAY,kBAAMF,GAAM,SAAAD,GAAE,OAAIA,EAAKF,OAAS,CAACA,IAKhE,OAHAD,EAAWJ,IAAIS,GACfL,EAAWJ,IAAIW,GAGb,6BACE,yBAAKV,UAAU,aACb,0FACA,8FACA,6EACA,wCAAcI,GACd,oCAAUE,GAEV,kBAACL,EAAD,CAAQlB,QAASyB,GAAjB,mBACA,kBAACP,EAAD,CAAQlB,QAAS2B,GAAjB,qBAEA,wDAA8BP,EAAWD,SCvBjDS,iBACE,6BACE,kBAACC,EAAD,MACA,kBAACC,EAAD,OAEDC,SAASC,eAAe,U","file":"static/js/main.1e5b18b8.chunk.js","sourcesContent":["import React from 'react'\n\nconst randomColour = () => '#'+(Math.random()*0xFFFFFF<<0).toString(16);\n\nexport default (props) => {\n  return (\n    <button onClick={props.onClick} style={{background: randomColour()}}>{props.children}</button>\n  )\n}\n","import React, { useState } from 'react'\nimport Button from './components/Button'\n\nimport \"./styles/test.css\"\n\nconst functions = new Set()\n\nexport default () => {\n  const [delta, setDelta] = useState(1)\n  const [c, setC] = useState(0)\n  const incrementDelta = () => setDelta(delta => delta + 1)\n  const increment = () => setC(c => c + delta)\n  // to check the counter of recreated buttons\n  functions.add(incrementDelta)\n  functions.add(increment)\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1>Let's see how React re-creates components.</h1>\n        <p>While clicking a button, it updates status variables C and Delta.</p>\n        <p>And it should not re-create two functions.</p>\n        <p>But now it re-creates, and functions counter is increasing, so it generates performance-issue</p>\n        <div>Delta: {delta}</div>\n        <div>C: {c}</div>\n\n        <Button onClick={incrementDelta}>Increment Delta</Button>\n        <Button onClick={increment}>Increment Counter</Button>\n\n        <h3>Newly created functions: {functions.size}</h3>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport Button from './components/Button'\n\nimport \"./styles/test.css\"\n\nconst functions2 = new Set()\n\nexport default () => {\n  const [delta2, setDelta2] = useState(1)\n  const [c2, setC2] = useState(0)\n  const incrementDelta2 = useCallback(() => setDelta2(delta2 => delta2 + 1), [])\n  const increment2 = useCallback(() => setC2(c2 => c2 + delta2), [delta2])\n  // to check the counter of recreated buttons\n  functions2.add(incrementDelta2)\n  functions2.add(increment2)\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h3>useCallback() only updates cache if dependency is updated.</h3>\n        <p>So it does not re-create increment2() unless delta2 is updated.</p>\n        <p>Please check repository source code with care.</p>\n        <div>Delta2: {delta2}</div>\n        <div>C2: {c2}</div>\n\n        <Button onClick={incrementDelta2}>Increment Delta</Button>\n        <Button onClick={increment2}>Increment Counter</Button>\n\n        <h3>Newly created functions: {functions2.size}</h3>\n      </div>\n    </div>  \n  )\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport Test1 from './Test1'\nimport Test2 from './Test2'\n\nrender((\n  <div>\n    <Test1 />\n    <Test2 />\n  </div>\n), document.getElementById('root'))\n"],"sourceRoot":""}